<style>
  html,
  body {
    margin: 0;
    padding: 0;
  }

  * {
    box-sizing: border-box;
    font-family: Arial;
  }

  #chat {
    /* width: 100vw;
    height: 100vh;
    padding: 12px; */
  }

  #chat div {
    padding: 4px 0px;
  }

  #chat div b {
    color: #555;
  }

  input[type='text'] {
    position: fixed;
    bottom: 10px;
    left: 12px;
    outline: none;
    width: 400px;
    border: #555 solid 1px;
    font-size: 14px;
    padding: 4px;
  }




  .app-layout {
    display: grid;
    height: 50vh;
    grid-template-columns: 50px 125px 1fr;
    grid-template-rows: auto 1fr auto;
  }

  .header {
    background-color: #ffffff;
  }

  .teams {
    background-color: #362233;
  }

  .channels {
    background-color: #52364E;
  }

  .messages {
    background-color: #ffffff;
  }

  .write {
    background-color: #f2f2f2;
  }

  .teams {
    grid-column: 1;
    grid-row: 1 / 4;
  }

  .channels {
    grid-column: 2;
    grid-row: 1 / 4;
  }

  .header {
    grid-column: 3;
    grid-row: 1;
    color: #333;
    border-bottom: 1px solid #f2f2f2;
  }

  .messages {
    grid-column: 3;
    grid-row: 2;
    padding: 0 1em;
    overflow-y: scroll;
  }

  .input {
    grid-column: 3;
    grid-row: 3;
  }
</style>
<h3 class="servervar">
  Chat topic <%= channel %>
</h3>
<div id="chat"></div>
<input id="message" type="text" autofocus />
<div class="app-layout">
  <div class="teams box">Teams</div>
  <div class="channels box" id="channels box">Channels</div>
  <div class="header box">Header</div>
  <div class="messages box">
    <ul class="message-list" id="message-list">
    </ul>
  </div>
  <div class="input box">
    <input type="text" placeholder="Have you tried the CSS Grid Layout Module?">
  </div>
</div>
<div id="channels"></div>
<script>
  let _ws = null
  // init()
  function init() {
    _ws = new WebSocket(
      `ws://${window.location.host}/chat/ping/?channel=${__channel__}`,
    )
    _ws.onmessage = (message) => {
      message = JSON.parse(message.data)
      appendMessage(message)
    }
    document.getElementById('message').onkeypress = (evt) => {
      if (evt.key == 'Enter') {
        _ws.send(
          JSON.stringify({
            message: evt.target.value,
          }),
        )
        evt.target.value = ''
      }
    }
  }

  function appendMessage(message) {
    document.getElementById(
      'chat',
    ).innerHTML += `<div><b>${message.sender}:&nbsp;</b>${message.message}</div>`
  }

  const channels = document.getElementById('channels')
  if (channels) {
    fetch(`/listings/id/${window.__id__}/channels`)
      .then(response => response.json())
      .then(data => {
        data.channels.forEach(channel => {
          var ul = document.getElementById("channels box");
          var li = document.createElement("li");
          li.appendChild(document.createTextNode(channel));
          ul.appendChild(li);

          // let btn = document.createElement("button");
          // btn.innerHTML = "Submit";
          // btn.type = "submit";
          // btn.name = "formBtn";
          // channels.appendChild(btn);

        });
        console.log(`channels ${data}`)
      })
  }
</script>